<?xml version="1.0" encoding="UTF-8"?>

<configuration>

  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="EABI.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
        <identity impersonate="false" />
    <customErrors mode="Off" />
  </system.web>

  <system.serviceModel>
    <client>
      <endpoint address="https://gsa.ecpic.gov/eCPIC.WcfService/WcfService.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IWcfService" contract="eCPICWcfService.IWcfService" name="WSHttpBinding_IWcfService" />
    </client>
    <services>
      <service name="EABI.EAOpen">
        <endpoint contract="EABI.IEAOpen"
          binding="webHttpBinding"
          bindingConfiguration="ApiQuotaBinding"
          behaviorConfiguration="webHttpBehavior" />
        <endpoint contract="EABI.IEAOpen"
          binding="webHttpBinding"
          bindingConfiguration="SecureApiQuotaBinding"
          behaviorConfiguration="webHttpBehavior" />
      </service>
    </services>
    <bindings>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IWcfService">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
      <webHttpBinding>
        <binding name="ApiQuotaBinding" crossDomainScriptAccessEnabled="True" closeTimeout="00:03:00" openTimeout="00:03:00" receiveTimeout="00:10:00" sendTimeout="00:03:00" maxBufferSize="1048576000" maxBufferPoolSize="1048576000" maxReceivedMessageSize="1048576000">
          <readerQuotas maxDepth="32" maxStringContentLength="1048576000" maxArrayLength="1048576000" maxBytesPerRead="1048576000" />
          <security mode="None" />
        </binding>
        <binding name="SecureApiQuotaBinding" crossDomainScriptAccessEnabled="True" closeTimeout="00:03:00" openTimeout="00:03:00" receiveTimeout="00:10:00" sendTimeout="00:03:00" maxBufferSize="1048576000" maxBufferPoolSize="1048576000" maxReceivedMessageSize="1048576000">
          <readerQuotas maxDepth="32" maxStringContentLength="1048576000" maxArrayLength="1048576000" maxBytesPerRead="1048576000" />
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </webHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="webHttpBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
</system.serviceModel>

  <system.webServer>
	<!-- 
		The following section is the code required to run js code through node.js, rather than being served up to the client. 
		See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for more details on the following config items.
		See http://www.dotnetexpertguide.com/2012/01/installing-and-running-nodejs-iisnode.html for why @devErrorsEnabled, @debuggingEnabled and @loggingEnabled are set to False. 
		
	--> 
	<handlers>
		<add name="iisnode" path="app.js" verb="*" modules="iisnode" />  
	</handlers>
	
	
	<!-- This section tells IIS to look at the <public> folder for the Client side code. 
		 See "https://github.com/projectkudu/kudu/wiki/Using-a-custom-web.config-for-Node-apps" for this template --> 
	<rewrite>
      <rules>
		<!-- Removed node-inspector debug rule--> 
        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- All other URLs are mapped to the node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="app.js"/> 
        </rule>
      </rules>
    </rewrite>
	
	<!-- exclude node_modules directory and subdirectories from serving
     by IIS since these are implementation details of node.js applications -->
	
	<security>
       <requestFiltering>
         <hiddenSegments>
           <add segment="node_modules" />
         </hiddenSegments>
       </requestFiltering>
     </security>
	
	
	
	
	
	<!-- Boilerplate web.config addition, minus "falses" as noted above {dotnetexpertguide.com}--> 
	<iisnode      
		  node_env="%node_env%"
		  nodeProcessCountPerApplication="1"
		  maxConcurrentRequestsPerProcess="1024"
		  maxNamedPipeConnectionRetry="100"
		  namedPipeConnectionRetryDelay="250"      
		  maxNamedPipeConnectionPoolSize="512"
		  maxNamedPipePooledConnectionAge="30000"
		  asyncCompletionThreadCount="0"
		  initialRequestBufferSize="4096"
		  maxRequestBufferSize="65536"
		  watchedFiles="*.js;iisnode.yml"
		  uncFileChangesPollingInterval="5000"      
		  gracefulShutdownTimeout="60000"
		  loggingEnabled="False"
		  logDirectory="iisnode"
		  debuggingEnabled="false"
		  debugHeaderEnabled="false"
		  debuggerPortRange="5058-6058"
		  debuggerPathSegment="debug"
		  maxLogFileSizeInKB="128"
		  maxTotalLogFileSizeInKB="1024"
		  maxLogFiles="20"
		  devErrorsEnabled="false" 
		  flushResponse="false"      
		  enableXFF="false"
		  promoteServerVars=""
		  configOverrides="iisnode.yml" 
		  nodeProcessCommandLine="&quot;%programfiles(x86)%\nodejs\node.exe&quot;" 
		  interceptor="&quot;%programfiles%\iisnode\interceptor.js&quot;" />
	
	
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->

    <directoryBrowse enabled="false" />
  <staticContent>
      <remove fileExtension=".woff" /> <!-- In case IIS already has this mime type -->
      <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
    </staticContent>
  </system.webServer>

  <applicationSettings>
    <EABI.Properties.Settings>
      <setting name="EABI_SFDC_SforceService" serializeAs="String">
        <value>https://login.salesforce.com/services/Soap/c/32.0</value>
      </setting>
    </EABI.Properties.Settings>
  </applicationSettings>
</configuration>
